Author: Chris Kuehl <ckuehl@ocf.berkeley.edu>
Subject: Make temporary fork
Forwarded: not-needed

--- a/pre_commit/clientlib/validate_base.py
+++ b/pre_commit/clientlib/validate_base.py
@@ -77,7 +77,7 @@ def get_run_function(filenames_help, validate_strategy, exception_cls):
             '-V', '--version',
             action='version',
             version='%(prog)s {0}'.format(
-                pkg_resources.get_distribution('pre-commit').version
+                pkg_resources.get_distribution('ckuehl-pre-commit-types').version  # noqa
             )
         )
 
--- a/pre_commit/main.py
+++ b/pre_commit/main.py
@@ -36,7 +36,7 @@ def main(argv=None):
         '-V', '--version',
         action='version',
         version='%(prog)s {0}'.format(
-            pkg_resources.get_distribution('pre-commit').version
+            pkg_resources.get_distribution('ckuehl-pre-commit-types').version
         )
     )
 
--- a/pre_commit/repository.py
+++ b/pre_commit/repository.py
@@ -25,7 +25,7 @@ from pre_commit.prefixed_command_runner import PrefixedCommandRunner
 logger = logging.getLogger('pre_commit')
 
 _pre_commit_version = pkg_resources.parse_version(
-    pkg_resources.get_distribution('pre-commit').version
+    pkg_resources.get_distribution('ckuehl-pre-commit-types').version
 )
 
 # Bump when installation changes in a backwards / forwards incompatible way
--- a/setup.py
+++ b/setup.py
@@ -4,16 +4,16 @@ from setuptools import setup
 
 
 setup(
-    name='pre_commit',
+    name='ckuehl_pre_commit_types',
     description=(
         'A framework for managing and maintaining multi-language pre-commit '
         'hooks.'
     ),
     url='https://github.com/pre-commit/pre-commit',
-    version='0.7.6',
+    version='0.7.6.dev1',
 
-    author='Anthony Sottile',
-    author_email='asottile@umich.edu',
+    author='Chris Kuehl (testing fork), Anthony Sottile',
+    author_email='ckuehl@yelp.com',
 
     platforms='linux',
     classifiers=[
--- a/tests/repository_test.py
+++ b/tests/repository_test.py
@@ -559,9 +559,10 @@ def test_too_new_version(tempdir_factory, store, fake_log_handler):
     with pytest.raises(SystemExit):
         repo.install()
     msg = fake_log_handler.handle.call_args[0][0].msg
+    print(msg)
     assert re.match(
         r'^The hook `bash_hook` requires pre-commit version 999\.0\.0 but '
-        r'version \d+\.\d+\.\d+ is installed.  '
+        r'version \d+\.\d+\.\d+(\.dev\d+)? is installed.  '
         r'Perhaps run `pip install --upgrade pre-commit`\.$',
         msg,
     )
@@ -569,7 +570,7 @@ def test_too_new_version(tempdir_factory, store, fake_log_handler):
 
 @pytest.mark.parametrize(
     'version',
-    ('0.1.0', pkg_resources.get_distribution('pre-commit').version),
+    ('0.1.0', pkg_resources.get_distribution('ckuehl-pre-commit-types').version),  # noqa
 )
 def test_versions_ok(tempdir_factory, store, version):
     path = make_repo(tempdir_factory, 'script_hooks_repo')
